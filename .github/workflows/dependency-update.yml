name: Dependency Update

on:
  schedule:
    - cron: '0 6 * * *'  # Daily at 6:00 UTC
  workflow_dispatch:

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    outputs:
      changes_detected: ${{ steps.git_status.outputs.changes_detected }}
    steps:
      - name: Checkout Main
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Prepare Branch
        run: |
          git fetch origin
          git checkout -B dependency-update origin/main

      - name: Update Dependencies
        run: ./gradlew useLatestVersions

      - name: Commit and Push Changes (if any)
        id: git_status
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add .
          if git diff --cached --quiet; then
            echo "No changes detected."
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          else
            git commit -m "chore: update dependencies to latest stable versions"
            git push origin dependency-update --force
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          fi

  build-and-merge:
    runs-on: ubuntu-latest
    needs: update-dependencies
    if: needs.update-dependencies.outputs.changes_detected == 'true'
    steps:
      - name: Checkout dependency-update branch
        uses: actions/checkout@v4
        with:
          ref: dependency-update

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Run Tests
        run: ./gradlew clean build -Denvironment=ci

      - name: Merge to Main
        id: merge_step
        run: |
          set -e
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git fetch origin main
          git checkout -B main origin/main
          git merge --ff-only origin/dependency-update
          git push origin main

      - name: Delete dependency-update branch (if merge succeeded)
        if: success() && steps.merge_step.outcome == 'success'
        run: git push origin --delete dependency-update
