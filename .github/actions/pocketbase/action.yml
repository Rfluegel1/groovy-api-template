name: 'Start PocketBase'
description: 'Downloads and starts a PocketBase server for testing'
inputs:
  version:
    description: 'PocketBase version'
    default: '0.28.2'
    required: false

runs:
  using: "composite"
  steps:
    - name: Download and Unzip PocketBase
      shell: bash
      run: |
        curl -L -o pocketbase.zip https://github.com/pocketbase/pocketbase/releases/download/v${{ inputs.version }}/pocketbase_${{ inputs.version }}_linux_amd64.zip
        unzip -o -q pocketbase.zip
        chmod +x pocketbase

    - name: Start PocketBase
      shell: bash
      run: |
        ./pocketbase serve &

    - name: Wait for PocketBase
      shell: bash
      run: |
        for i in {1..10}; do
          if curl -s http://localhost:8090/api/collections > /dev/null; then
            echo "PocketBase is ready"
            break
          fi
          echo "Waiting for PocketBase..."
          sleep 2
        done

    - name: Create PocketBase admin (superuser)
      shell: bash
      run: ./pocketbase superuser create groovy-api-template@fake.com testPassword@

    - name: Authenticate as PocketBase admin
      id: admin-auth
      shell: bash
      run: |
        ADMIN_RESPONSE=$(curl -s -X POST http://localhost:8090/api/admins/auth-with-password \
          -H "Content-Type: application/json" \
          -d '{"email":"groovy-api-template@fake.com","password":"testPassword@"}')
        echo "token=$(echo $ADMIN_RESPONSE | jq -r '.token')" >> $GITHUB_OUTPUT

    - name: Create PocketBase user
      id: user-create
      shell: bash
      run: |
        CREATE_USER_JSON=$(curl -s -X POST http://localhost:8090/api/collections/users/records \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ steps.admin-auth.outputs.token }}" \
          -d '{
            "email": "test-user@example.com",
            "password": "userpassword123",
            "passwordConfirm": "userpassword123"
          }')
        echo "id=$(echo $CREATE_USER_JSON | jq -r '.id')" >> $GITHUB_OUTPUT
        
    - name: Set PocketBase user as verified
      shell: bash
      run: |
        curl -X PATCH http://localhost:8090/api/collections/users/records/${{ steps.user-create.outputs.id }} \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ steps.admin-auth.outputs.token }}" \
          -d '{"verified": true}'
